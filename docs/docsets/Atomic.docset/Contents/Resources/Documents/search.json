{"Classes/Lock.html#/s:6Atomic4LockC4makeACyFZ":{"name":"make()","abstract":"<p>Return an instance of a <code>Lock</code>, according to API availability (<code>os_unfair_lock_t</code> or <code>pthread_mutex_t</code> based).</p>","parent_name":"Lock"},"Classes/Lock.html#/s:6Atomic4LockC4lockyyF":{"name":"lock()","abstract":"<p>Locks the lock</p>","parent_name":"Lock"},"Classes/Lock.html#/s:6Atomic4LockC6unlockyyF":{"name":"unlock()","abstract":"<p>Unlocks the lock</p>","parent_name":"Lock"},"Classes/Lock.html#/s:6Atomic4LockC3trySbyF":{"name":"try()","abstract":"<p>Locks the lock if it is not already locked.</p>","parent_name":"Lock"},"Classes/VarBox.html#/s:6Atomic6VarBoxC5valuexvp":{"name":"value","abstract":"<p>The encapsulated value.</p>","parent_name":"VarBox"},"Classes/VarBox.html#/s:6Atomic6VarBoxCyACyxGxcfc":{"name":"init(_:)","abstract":"<p>Instantiate a new variable value box with the given value.</p>","parent_name":"VarBox"},"Classes/Box.html#/s:6Atomic3BoxC5valuexvp":{"name":"value","abstract":"<p>The encapsulated value.</p>","parent_name":"Box"},"Classes/Box.html#/s:6Atomic3BoxCyACyxGxcfc":{"name":"init(_:)","abstract":"<p>Instantiate a new constant value box with the given value.</p>","parent_name":"Box"},"Classes/Atomic.html#/s:6AtomicAAC5valuexvp":{"name":"value","abstract":"<p>Atomically get, set or modify the value of the variable.</p>","parent_name":"Atomic"},"Classes/Atomic.html#/s:6AtomicAACyAByxGxcfc":{"name":"init(_:)","abstract":"<p>Initialize the variable with the given initial value.</p>","parent_name":"Atomic"},"Classes/Atomic.html#/s:6AtomicAAC6modifyyqd__qd__xzKXEKlF":{"name":"modify(_:)","abstract":"<p>Atomically modifies the variable.</p>","parent_name":"Atomic"},"Classes/Atomic.html#/s:6AtomicAAC9withValueyqd__qd__xKXEKlF":{"name":"withValue(_:)","abstract":"<p>Atomically perform an arbitrary action using the current value of the","parent_name":"Atomic"},"Classes/Atomic.html#/s:6AtomicAAC4swapyxxF":{"name":"swap(_:)","abstract":"<p>Atomically replace the contents of the variable.</p>","parent_name":"Atomic"},"Classes/Atomic.html":{"name":"Atomic","abstract":"<p>An atomic variable.</p>"},"Classes/Box.html":{"name":"Box","abstract":"<p>An arbitrary container which stores a <strong>constant</strong> value of type <code>T</code>.</p>"},"Classes/VarBox.html":{"name":"VarBox","abstract":"<p>An arbitrary container which stores a <strong>variable</strong> value of type <code>T</code>.</p>"},"Classes/Lock.html":{"name":"Lock","abstract":"<p><code>Lock</code> exposes <code>os_unfair_lock</code> on supported platforms, with pthread mutex as the fallback (or for recursive locks).</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"}}